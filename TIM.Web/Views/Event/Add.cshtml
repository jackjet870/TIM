@model TIM.Data.ModelClasses.EventViewModel

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")

    <script>

        $(document).ready(function () {

            $.validator.methods.range = function (value, element, param) {
                var globalizedValue = value.replace(",", ".");
                return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
            }

            $.validator.methods.number = function (value, element) {
                return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
            }
        });
        

        $(function () { // will trigger when the document is ready
        $('.datepicker').datepicker(); //Initialise any date pickers
        });

        function replaceDots()
        {      

            document.getElementById('Latitude').value = document.getElementById('Latitude').value.replace('.', ',');
            document.getElementById('Longitude').value = document.getElementById('Longitude').value.replace('.', ',');

        }

    </script>
}


@*<script src="@Url.Content("~/Scripts/jquery.globalize/globalize.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.globalize/cultures/globalize.culture.fr-FR.js")" type="text/javascript"></script>*@

<script src="http://maps.googleapis.com/maps/api/js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">

@*dla finalnej wersji odkomentować to i zakomentować @Scripts.Render("~/bundles/jqueryui"), zrobić podobnie z resztą skryptów*@
@*<script src="http://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>*@

<script>
    var map;
    var myCenter = new google.maps.LatLng(51.69979984974196, 18.83056640625);

    function initialize() {
        var mapProp = {
            center: myCenter,
            zoom: 5,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        map = new google.maps.Map(document.getElementById("googleMap"), mapProp);

        google.maps.event.addListener(map, 'click', function (event) {
            placeMarker(event.latLng);
        });
    }

    var marker;

    function placeMarker(location) {
        if (marker != null)
            marker.setMap(null);

        $('#Latitude').val(location.lat());
        $('#Longitude').val(location.lng());
        replaceDots();

        marker = new google.maps.Marker({
            position: location,
            map: map,
        });
        var infowindow = new google.maps.InfoWindow({
            content: 'Latitude: ' + location.lat().toFixed(2) + '<br>Longitude: ' + location.lng().toFixed(2)
        });
        infowindow.open(map, marker);
    }

    google.maps.event.addDomListener(window, 'load', initialize);
</script>

<h2>Add event</h2>

<p>@ViewBag.Success</p>
<p>@ViewBag.Error</p>

<br />

<div id="googleMap" style= "width:500px; height:350px; float:right">
</div>

<div style="height:400px" >

    @using (Html.BeginForm("Add", "Event", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <table>
            <tr>
                <td>
                    @Html.LabelFor(m => m.Name)
                </td>
                <td>
                    @Html.EditorFor(m => m.Name)
                    @Html.ValidationMessageFor(m => m.Name)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(m => m.Sport)
                </td>
                <td>
                    @Html.ValidationMessageFor(m => m.Sport)
                    @Html.DropDownListFor(m => m.Sport, (IEnumerable<SelectListItem>)ViewBag.sportsList)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(m => m.Individual)
                </td>
                <td>
                    @Html.CheckBoxFor(m => m.Individual)
                    @Html.ValidationMessageFor(m => m.Individual)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(m => m.Latitude)
                </td>
                <td>
                    @Html.TextBoxFor(m => m.Latitude, new { @id = "Latitude"@*, @readonly = true*@ })
                    @Html.ValidationMessageFor(m => m.Latitude)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(m => m.Longitude)
                </td>
                <td>
                    @Html.TextBoxFor(m => m.Longitude, new { @id = "Longitude"@*, @readonly = false*@ })
                    @Html.ValidationMessageFor(m => m.Longitude)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(m=>m.StartDate)
                </td>
                <td>
                    <div class="form-group input-group-sm">
                        @Html.EditorFor(m => m.StartDate
                            , new { @class = "form-control datepicker", placeholder = "Enter Drop-off date here..." })
                        @Html.ValidationMessageFor(m => m.StartDate)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(m => m.EndDate)
                </td>
                <td>
                    <div class="form-group input-group-sm">
                        @Html.EditorFor(m => m.EndDate
                            , new { @class = "form-control datepicker", placeholder = "Enter Drop-off date here..." })
                        @Html.ValidationMessageFor(m => m.EndDate)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    @Html.Label("Teams")
                </td>
                <td>
                    @Html.DropDownListFor(m => m.TeamIds, (IEnumerable<SelectListItem>)ViewBag.teamsList, new { multiple = "multiple" })
                    @Html.ValidationMessageFor(m => m.TeamIds)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.Label("Athletes")
                </td>
                <td>
                    @Html.DropDownListFor(m => m.AthleteIds, (IEnumerable<SelectListItem>)ViewBag.athletesList, new { multiple = "multiple" })
                    @Html.ValidationMessageFor(m => m.AthleteIds)
                </td>
            </tr>
        </table>
        <input type="submit" @*onclick="replaceDots()"*@ value="Add" class="addEntity" />
    }
</div>